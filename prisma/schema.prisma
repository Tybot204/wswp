// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  id String @id @default(uuid()) @db.Uuid

  isFree     Boolean @default(false) @map("is_free")
  name       String
  numPlayers Int     @map("num_players")
  released   Boolean @default(true)

  bannerImageURL    String? @map("banner_image_url")
  thumbnailImageURL String? @map("thumbnail_image_url")
  gameURL           String? @map("game_url")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  createdById String @map("created_by_id") @db.Uuid
  createdBy   User   @relation(fields: [createdById], references: [id])

  ratings Rating[]

  @@map("games")
}

model Rating {
  id String @id @default(uuid()) @db.Uuid

  score Int

  gameId String @map("game_id") @db.Uuid
  game   Game   @relation(fields: [gameId], references: [id])

  userId String @map("user_id") @db.Uuid
  user   User   @relation(fields: [userId], references: [id])

  @@unique([gameId, userId])
  @@map("ratings")
}

model User {
  id String @id @default(uuid()) @db.Uuid

  discordId   String @unique @map("discord_id")
  discordName String @map("discord_name")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  games   Game[]
  ratings Rating[]

  @@map("users")
}
